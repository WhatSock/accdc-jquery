/*
Toggle Generator R2.0
Copyright 2010-2013 Bryan Garaventa (WhatSock.com)
Part of AccDC, a Cross-Browser JavaScript accessibility API, distributed under the terms of the Open Source Initiative OSI - MIT License

ARIA Toggle and ARIA Checkbox Rules :
IMG : Use aria-label to set screen reader text.
INPUT : Use both aria-label and Title to set screen reader text.
All tags that support innerHTML: Use innerText (whether offscreen or visible) to set screen reader text.
Image links (A tag with embedded IMG): Use innerText and add alt="" to the IMG tag to set screen reader text. (This is required for iOS support using Voiceover)
	*/
(function(){$A.Toggle=function(c,b){var b=b||{},d=typeof c==="string"?$A.getEl(c):c,f=this,e=$A.getAttr(d,"role")=="checkbox"?true:false,h=$A.createEl("span",null,$A.sraCSS);if(!b.noToggle&&b.noARIA){if(!b.roleText){b.roleText="Toggle"}if(!b.stateText){b.stateText="Pressed"}d.appendChild(h)}var a=function(j){var i=true;if(b.callback&&typeof b.callback==="function"){i=b.callback.apply(d,[j])}if(i){if(!b.noToggle&&b.noARIA){h.innerHTML=j?("&nbsp;"+b.roleText+"&nbsp;"+b.stateText):"&nbsp;"+b.roleText}else{if(!b.noToggle){$A.setAttr(d,e?"aria-checked":"aria-pressed",j?"true":"false")}}f.state=j}};var g=d.nodeName.toLowerCase();if(!((g=="input"&&(d.getAttribute("type")=="button"||d.getAttribute("type")=="image"))||(g=="a"&&d.hasAttribute("href"))||(g=="button"))){$A.setAttr(d,"tabindex","0")}$A.bind(d,{keypress:function(j){var i=j.which||j.keyCode;if(i==13||i==32){j.preventDefault();if(!(d.nodeName.toLowerCase()=="input"&&d.type=="image"&&i==32)){$A.trigger(d,"click")}}},click:function(i){a.apply(d,[f.state?false:true])?true:false;i.preventDefault()}});f.set=function(i){a.apply(d,[i])};if(!b.noToggle){a.apply(d,[b.state?true:false])}}})();